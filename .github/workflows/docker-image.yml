# Configura un flujo de trabajo de GitHub Actions que compila y sube una imagen Docker 
# De tu aplicación cada vez que se hace un push en la rama master

#es un archivo de configuración que automatiza la construcción y despliegue de la imagen Docker en Docker Hub 

name: Docker build & Publish

# Se activa cada vez que hago un push en master
on: 
  push:
    branches:
      - master

# Se ejecuta en un entorno Ubuntu-latest.
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    # Descarga el código fuente del repositorio en la máquina virtual.
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

    # Inicia sesión en Docker Hub utilizando las credenciales almacenadas como secretos en el repositorio de GitHub.
      - name: Login to Docker Hub
        run: docker login -u "${{secrets.DOCKER_USERNAME}}" -p "${{secrets.DOCKER_PASSWORD}}"
    
    # Constuir la imagen Docker con el tag de greys04/todoApp con un commit unico en el directorio actual (.)
      - name: Build Docker Image
        run: docker build -t greys04/incident-app:${{github.sha}} .

    #Asigna la etiqueta latest a la imagen que se acaba de compilar para identificar la versión más reciente de la imagen.
      - name: Tag Latest
        run: docker tag greys04/incident-app:${{github.sha}} greys04/incident-app:latest

    #ube la imagen a Docker Hub con ambas etiquetas: una para el commit específico (${{github.sha}}) y otra como latest.
      - name: Push Docker Image
        run: |
          docker push greys04/incident-app:${{github.sha}}
          docker push greys04/incident-app:latest
